// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Client {
  id            Int       @id @default(autoincrement())
  clientName    String
  clientEmail   String    
  clientAddress Address   @relation(fields: [addressId], references: [id])
  Invoice       Invoice[]
  addressId     Int
  @@unique(name: "clientInfo",[clientName, clientEmail])
}

model Item {
  id        Int      @id @default(autoincrement())
  name      String
  quantity  Int
  price     Float
  total     Float
  Invoice   Invoice? @relation(fields: [invoiceId], references: [id])
  invoiceId String?
}

model Address {
  id       Int       @id @default(autoincrement())
  street   String    
  city     String
  postcode String
  country  String
  Client   Client[]
  Invoice  Invoice[]
  @@unique(name: "address",[street, city, postcode, country])
}

enum Status {
  Paid
  Pending
  Draft
}

model Invoice {
  id            String   @id
  createdAt     DateTime @default(now())
  paymentDue    DateTime
  description   String
  paymentTerms  Int
  status        Status
  client        Client   @relation(fields: [clientId], references: [id])
  clientId      Int
  item          Item[]
  total         Float
  senderAddress Address  @relation(fields: [addressId], references: [id])
  addressId     Int
}
